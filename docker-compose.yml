version: "3.2"

services:
  app:
    build:
      context: .
    image: &app app
    ports:
      - "8000:8000"
    env_file: &envfile
      - env.env
    volumes:
      - ./app:/app
    environment:
      - DB_HOST=db
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis
      - broker

  redis:
    restart: always
    image: redis:latest
    ports:
      - "6384:6379"

  db:
    image: postgres:12-alpine
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"

  worker:
    build: .
    image: *app
    restart: always
    env_file: *envfile
    command: ["celery", "worker", "--app=worker.worker.app", "--concurrency=1", "--hostname=worker@%h", "--loglevel=INFO"]
    volumes:
      - ./app:/app
    depends_on:
      - broker
      - redis

  broker:
    image: rabbitmq:3
    env_file: *envfile
    ports:
      - 5672:5672
